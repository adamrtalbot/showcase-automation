name: showcase-autotest
run-name: run-pipelines
on:
  workflow_dispatch:
    inputs:
      dryrun:
        description: "Dryrun (do not submit pipeline to Tower"
        default: false
        type: boolean
        required: false

  schedule:
    # Every day at 2am
    - cron: "0 2 * * 1"

jobs:
  getdate:
    runs-on: ubuntu-latest
    steps:
      - name: "Get current date"
        run: |
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
        id: date
    outputs:
      date: ${{ steps.date.outputs.date }}

  runtest:
    runs-on: ubuntu-latest
    name: ${{ matrix.pipeline.name }}.${{ matrix.compute_env.name }}
    needs: getdate
    continue-on-error: true
    outputs:
      runname: ${{ steps.id.outputs.name }}
    strategy:
      matrix:
        pipeline:
          - { name: hello, url: hello, rev: master, latest: true, profiles: "" }
        compute_env:
          - {
              name: aws,
              ref: seqera_aws_ireland_fusionv2_nvme,
              workdir: "s3://seqeralabs-showcase",
              workspace_id: SEQERA_SHOWCASE_WORKSPACE_ID,
            }

    steps:
      - name: "export run name"
        run: |
          echo "name=${{ matrix.pipeline.name }}_${{ matrix.compute_env.name }}_${{ needs.getdate.outputs.date }}" >> $GITHUB_OUTPUT
        id: id

      - uses: seqeralabs/action-tower-launch@8ff078c8133a8ad2145a96752688a990198d6529
        if: ${{ !inputs.dryrun }}
        with:
          pipeline: ${{ matrix.pipeline.url }}
          workspace_id: ${{ secrets[matrix.compute_env.workspace_id] }}
          access_token: ${{ secrets.TOWER_ACCESS_TOKEN }}
          compute_env: ${{ matrix.compute_env.ref }}
          workdir: "${{ matrix.compute_env.workdir }}/work/${{ matrix.pipeline.name }}/work-${{ needs.getdate.outputs.date }}"
          run_name: "${{ steps.id.outputs.name }}"
          revision: "${{ matrix.pipeline.rev }}"
          profiles: ${{ matrix.pipeline.profiles }}
          wait: SUBMITTED
          parameters: |
            {
                "outdir": "${{ matrix.compute_env.workdir }}/${{ matrix.pipeline.name }}/results-test-${{ needs.getdate.outputs.date }}",
                "hook_url": "${{ secrets.SLACK_HOOK_URL }}"
            }

      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: ${{ matrix.pipeline.name }}_${{ matrix.compute_env.name }}_log
          path: tower_action_*.log

  checkrun:
    runs-on: ubuntu-latest
    needs: runtest
    continue-on-error: true
    environment: delay
    steps:
    - name: "Echo run name after 2 mins"
        run: |
        echo ${{ needs.runtest.outputs.runname }}
